# ────────────────────────────────────────────────────────
# |                      FastLanes                       |
# ────────────────────────────────────────────────────────
# .github/workflows/fsst.yaml
# ────────────────────────────────────────────────────────
name: FSST
run-name: >-
  ${{ github.workflow }} on ${{ github.ref_name }} (#${{ github.run_number }})
  — ${{ github.event.pull_request.title || github.event.head_commit.message }}

# ──────────────────────────────────────────────────────────────────────────────
# Events
# ──────────────────────────────────────────────────────────────────────────────
on:
  push:
  pull_request:
    branches: [ "main", "dev" ]

# Cancel in-flight runs on the same branch/PR so we do not waste minutes
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# Global env (tweak once, use everywhere)
env:
  CMAKE_GENERATOR: Ninja            # much faster than Makefiles

jobs:
  # ──────────────────────────────────────────────────────────────────────────────
  # 2️⃣  Main build + clang-tidy (Linux + macOS)
  # ──────────────────────────────────────────────────────────────────────────────
  build:
    strategy:
      fail-fast: false
      matrix:
        platform: [ ubuntu-latest, macos-latest ]
        build_type: [ Release ]
        cxx: [ clang++ ]
    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v4

      - name: Detect CPU count
        shell: bash
        run: make detect-cpu | tee -a "$GITHUB_ENV"

      - name: Install LLVM
        uses: ./.github/actions/install-llvm

      # ----------------------------------------------------------------------
      # Configure (runs clang-tidy via CMake)
      # ----------------------------------------------------------------------
      - name: Configure (with clang-tidy checks)
        shell: bash
        run: |
          cmake -S "${{ github.workspace }}" \
                -B build_${{ matrix.build_type }} \
                -DFLS_ENABLE_VERBOSE_OUTPUT=ON \
                -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
                -DCMAKE_C_COMPILER=clang \
                -DFLS_ENABLE_FSST_TESTING_AND_BENCHMARKING=ON \
                -DCMAKE_CXX_COMPILER=${{ matrix.cxx }}

      - name: Build (clang-tidy runs automatically)
        run: cmake --build build_${{ matrix.build_type }} -j $BUILD_THREADS
