# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
# |                      FastLanes                       |
# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
# .github/actions/install-llvm/action.yml
# â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
# .github/actions/install-llvm-toolchain/action.yml
name: Install LLVM Toolchain
description: Cross-platform LLVM installer for macOS, Ubuntu and Windows

inputs:
  version:
    description: "Exact LLVM/Clang version to install, e.g. 18.1.4 or 18"
    default: "18.1.4"   # macOS & Linux are happy with 18.x; Windows auto-bumps if too old

runs:
  using: "composite"
  steps:
    - shell: bash
      run: |
        set -euo pipefail
        VERSION="${{ inputs.version }}"
        MAJOR="${VERSION%%.*}"

        echo "ðŸŸ£ Installing LLVM/Clang ${VERSION} on ${{ runner.os }}"

        if [[ "${{ runner.os }}" == "macOS" ]]; then
          # â”€â”€ 1. Install LLVM (Homebrew) â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
          if brew info "llvm@${MAJOR}" > /dev/null 2>&1; then
            brew install "llvm@${MAJOR}"
            LLVM_PREFIX="$(brew --prefix "llvm@${MAJOR}")"
          else
            echo "::warning ::llvm@${MAJOR} formula not found â€“ installing latest 'llvm' instead"
            brew install llvm
            LLVM_PREFIX="$(brew --prefix llvm)"
          fi
          echo "${LLVM_PREFIX}/bin" >> "$GITHUB_PATH"

          # â”€â”€ 2. Reclaim disk space so large static libs fit â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
          echo "ðŸ§¹ Freeing disk space on macOS runner â€¦"
          # Remove .NET (~6 GB) and Haskell (~3 GB)
          sudo rm -rf /usr/share/dotnet || true
          sudo rm -rf /opt/ghc         || true
          # Delete cached iOS / tvOS simulators & Android SDK (~4 GB)
          sudo rm -rf "$HOME/Library/Developer/CoreSimulator" || true
          sudo rm -rf "$HOME/Library/Android"                 || true
          # Remove old Homebrew download caches (~2 GB)
          brew cleanup -s      || true
          rm -rf "$(brew --cache)" || true
          df -h

        elif [[ "${{ runner.os }}" == "Linux" ]]; then
          # â”€â”€ Ubuntu LTS â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
          sudo apt-get update -y
          sudo apt-get install -y wget gnupg lsb-release software-properties-common
          wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | \
            sudo gpg --dearmor -o /usr/share/keyrings/llvm.gpg

          UBUNTU_CODENAME=$(lsb_release -cs)
          echo "deb [signed-by=/usr/share/keyrings/llvm.gpg] \
            http://apt.llvm.org/${UBUNTU_CODENAME}/ \
            llvm-toolchain-${UBUNTU_CODENAME}-${MAJOR} main" | \
            sudo tee /etc/apt/sources.list.d/llvm${MAJOR}.list

          sudo apt-get update -y
          sudo apt-get install -y clang-${MAJOR} clang++-${MAJOR} clang-tidy-${MAJOR} lld-${MAJOR}

          sudo update-alternatives --install /usr/bin/clang      clang      /usr/bin/clang-${MAJOR}       200
          sudo update-alternatives --install /usr/bin/clang++    clang++    /usr/bin/clang++-${MAJOR}     200
          sudo update-alternatives --install /usr/bin/clang-tidy clang-tidy /usr/bin/clang-tidy-${MAJOR}  200

          echo "/usr/lib/llvm-${MAJOR}/bin" >> "$GITHUB_PATH"

        elif [[ "${{ runner.os }}" == "Windows" ]]; then
          # â”€â”€ Windows Server 2022 â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
          # MSVC STL (VS 2022 17.11+) needs Clang â‰¥19. Auto-bump if caller asks for less.
          if [[ "${MAJOR}" -lt 19 ]]; then
            echo "::notice ::Requested LLVM ${VERSION} is older than MSVC STL accepts; upgrading to LLVM 20.1.7"
            VERSION="20.1.7"
            MAJOR="20"
          fi

          echo "â†’ chocolatey upgrade llvm --version=${VERSION}"
          choco upgrade llvm --version="${VERSION}" -y --no-progress --allow-downgrade

          # Add to PATH; quoting keeps the space intact
          echo 'C:\Program Files\LLVM\bin' >> "$GITHUB_PATH"

        else
          echo "::warning ::LLVM install not supported on ${{ runner.os }}"
        fi
